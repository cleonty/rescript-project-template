// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("rescript/lib/js/curry.js");

function square(x) {
  return Math.imul(x, x);
}

function $$double(x) {
  return x + x | 0;
}

function twice(f, x) {
  return Curry._1(f, Curry._1(f, x));
}

function eighth(param) {
  var f = function (param) {
    var x = Math.imul(param, param);
    return Math.imul(x, x);
  };
  return Curry._1(f, Curry._1(f, param));
}

function apply(f, x) {
  return Curry._1(f, x);
}

function pipeline(x, f) {
  return Curry._1(f, x);
}

function compose(f, g, x) {
  return Curry._1(f, Curry._1(g, x));
}

function square_then_double(param) {
  var x = Math.imul(param, param);
  return x + x | 0;
}

var x = 1;

var x$1 = x + x | 0;

var x$2 = 4;

var y = x$2 + x$2 | 0;

function both(f, g, x) {
  return [
          Curry._1(f, x),
          Curry._1(g, x)
        ];
}

function ds(param) {
  return both(square, $$double, param);
}

var z = both(square, $$double, 5);

console.log(z);

function cond(p, f, g, x) {
  if (Curry._1(p, x)) {
    return Curry._1(f, x);
  } else {
    return Curry._1(g, x);
  }
}

exports.square = square;
exports.$$double = $$double;
exports.twice = twice;
exports.eighth = eighth;
exports.apply = apply;
exports.pipeline = pipeline;
exports.compose = compose;
exports.square_then_double = square_then_double;
exports.x = x$1;
exports.y = y;
exports.both = both;
exports.ds = ds;
exports.z = z;
exports.cond = cond;
/* z Not a pure module */
