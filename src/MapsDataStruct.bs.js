// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Caml_obj = require("rescript/lib/js/caml_obj.js");
var Pervasives = require("rescript/lib/js/pervasives.js");
var Caml_option = require("rescript/lib/js/caml_option.js");

function insert(m, k, v) {
  m.push([
        k,
        v
      ]);
  return m;
}

function find(m, k) {
  var item = m.find(function (param) {
        return Caml_obj.caml_equal(k, param[0]);
      });
  if (item !== undefined) {
    return Caml_option.some(item[1]);
  }
  
}

function remove(m, k) {
  return m.filter(function (param) {
              return Caml_obj.caml_equal(k, param[0]);
            });
}

function empty(param) {
  return [];
}

function of_array(lst) {
  return lst;
}

function keys(m) {
  return m.map(function (param) {
                return param[0];
              }).sort(Caml_obj.caml_compare);
}

function bindings(m) {
  return keys(m).map(function (k) {
              var match = m.find(function (param) {
                    return Caml_obj.caml_equal(k, param[0]);
                  });
              return [
                      k,
                      match !== undefined ? match[1] : Pervasives.failwith("empty")
                    ];
            });
}

var AssocListMap = {
  insert: insert,
  find: find,
  remove: remove,
  empty: empty,
  of_array: of_array,
  bindings: bindings
};

var m = [];

var m1 = insert(m, 1, 2);

var m2 = insert(m, 3, 4);

console.log(m2);

exports.AssocListMap = AssocListMap;
exports.m = m;
exports.m1 = m1;
exports.m2 = m2;
/* m1 Not a pure module */
