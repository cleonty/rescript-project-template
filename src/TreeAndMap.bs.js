// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("rescript/lib/js/curry.js");

var t = /* Node */{
  value: 2,
  left: /* Node */{
    value: 1,
    left: /* Leaf */0,
    right: /* Leaf */0
  },
  right: /* Node */{
    value: 3,
    left: /* Leaf */0,
    right: /* Leaf */0
  }
};

function map(f, t) {
  if (t) {
    return /* Node */{
            value: Curry._1(f, t.value),
            left: map(f, t.left),
            right: map(f, t.right)
          };
  } else {
    return /* Leaf */0;
  }
}

function add1(x) {
  return x + 1 | 0;
}

var t_one = map(add1, t);

console.log(t_one);

function fold(acc, f, t) {
  if (t) {
    return Curry._3(f, t.value, fold(acc, f, t.left), fold(acc, f, t.right));
  } else {
    return acc;
  }
}

function sum(x, y, z) {
  return (x + y | 0) + z | 0;
}

var tsum = fold(0, sum, t);

console.log(tsum);

function filter(f, t) {
  if (!t) {
    return /* Leaf */0;
  }
  var value = t.value;
  if (Curry._1(f, value)) {
    return /* Node */{
            value: value,
            left: filter(f, t.left),
            right: filter(f, t.right)
          };
  } else {
    return /* Leaf */0;
  }
}

function even(x) {
  return x % 2 === 0;
}

var teven = filter(even, t);

console.log(teven);

exports.t = t;
exports.map = map;
exports.add1 = add1;
exports.t_one = t_one;
exports.fold = fold;
exports.sum = sum;
exports.tsum = tsum;
exports.filter = filter;
exports.even = even;
exports.teven = teven;
/* t_one Not a pure module */
