// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Caml_obj = require("rescript/lib/js/caml_obj.js");
var Caml_option = require("rescript/lib/js/caml_option.js");

console.log("Hello, World!");

function eff(t1, t2) {
  switch (t1) {
    case /* TNormal */0 :
        return /* ENormal */0;
    case /* TFire */1 :
        if (t2 !== 0) {
          return /* ENotVery */1;
        } else {
          return /* ENormal */0;
        }
    case /* TWater */2 :
        switch (t2) {
          case /* TNormal */0 :
              return /* ENormal */0;
          case /* TFire */1 :
              return /* ESuper */2;
          case /* TWater */2 :
              return /* ENotVery */1;
          
        }
    
  }
}

var ch_eff = eff(/* TFire */1, /* TWater */2);

console.log(ch_eff);

function get_val(x) {
  if (x !== undefined) {
    console.log("a number " + x.toString());
  } else {
    console.log("it 's none");
  }
  
}

get_val(5);

function max_lst(lst) {
  if (!lst) {
    return ;
  }
  var h = lst.hd;
  var val = max_lst(lst.tl);
  if (val !== undefined) {
    return Caml_option.some(Caml_obj.caml_max(Caml_option.valFromOption(val), h));
  } else {
    return Caml_option.some(h);
  }
}

var myList = {
  hd: 1,
  tl: {
    hd: 2,
    tl: {
      hd: 3,
      tl: {
        hd: 0,
        tl: /* [] */0
      }
    }
  }
};

var val = max_lst(myList);

if (val !== undefined) {
  console.log("max is " + val.toString());
} else {
  console.log("empty");
}

function avg(a, b) {
  return (a + b) / 2;
}

function center(shape) {
  switch (shape.TAG | 0) {
    case /* Circle */0 :
        return shape.center;
    case /* Rectangle */1 :
        var match = shape.upper_right;
        var match$1 = shape.lower_left;
        return [
                avg(match$1[0], match[0]),
                avg(match$1[1], match[1])
              ];
    case /* Point */2 :
        return shape._0;
    
  }
}

var c1 = {
  TAG: /* Circle */0,
  center: [
    0,
    0
  ],
  radius: 0.4
};

var match = center(c1);

var y = match[1];

var x = match[0];

console.log("center " + x.toString() + " " + y.toString());

var charmander = {
  name: "Charmander",
  hp: 39,
  ptype: /* TFire */1
};

exports.charmander = charmander;
exports.eff = eff;
exports.ch_eff = ch_eff;
exports.get_val = get_val;
exports.max_lst = max_lst;
exports.myList = myList;
exports.avg = avg;
exports.center = center;
exports.c1 = c1;
exports.x = x;
exports.y = y;
/*  Not a pure module */
